version: '3.9'
services:

  tyk-dashboard:
    image: tykio/tyk-dashboard:${DASHBOARD_VERSION:-v5.3.0}
    container_name: tyk-dashboard
    environment:
      - TYK_DB_LICENSEKEY=${DASH_LICENSE:?License key missing from Docker environment file "".env" file.  Review The Getting Started steps in README.md.}
      - TYK_DB_STORAGE_MAIN_TYPE=postgres
      - TYK_DB_STORAGE_MAIN_CONNECTIONSTRING=user=postgres password=topsecretpassword host=tyk-postgres port=5432 database=tyk_analytics
    depends_on:
      labs-kafka:
        condition: service_started
      tyk-postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    env_file:
      - ./confs/tyk_analytics.env
    networks:
      - tyk
  tyk-ent-portal:
    image: tykio/portal:${PORTAL_VERSION:-v1.8.5}
    command: --bootstrap
    depends_on:
      tyk-dashboard:
        condition: service_started
    ports:
      - 3001:3001
    environment:
      - PORTAL_LICENSEKEY=${DASH_LICENSE:?License key missing from Docker environment file "".env" file.  Review The Getting Started steps in README.md.}
    env_file:
      - ./confs/tyk_portal.env
    networks:
      - tyk
  labs-kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    networks:
      - tyk
    ports:
      - "9093:9093"
      - "9092:9092"
    volumes:
      - "kafka-data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=labs-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://labs-kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - labs-zookeeper
  labs-zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    networks:
      - tyk
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  tyk-gateway:
    image: tykio/tyk-gateway:${GATEWAY_VERSION:-v5.3.0}
    container_name: tyk-gateway
    depends_on:
      labs-kafka:
        condition: service_started
      tyk-redis:
        condition: service_started
    ports:
      - "8080:8080"
    env_file:
      - ./confs/tyk.env
    networks:
      - tyk

  tyk-pump:
    image: tykio/tyk-pump-docker-pub:v1.9.0
    container_name: tyk-pump
    env_file:
      - ./confs/pump.env
      - ./confs/pump.postgres.env
    depends_on:
      tyk-postgres:
        condition: service_healthy
    networks:
      - tyk

  tyk-redis:
    image: redis
    container_name: tyk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - tyk

  tyk-postgres:
    image: postgres:latest
    container_name: tyk-postgres

    environment:
      - POSTGRES_DB=tyk_analytics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=topsecretpassword

    ports:
      - "5432:5432"

    volumes:
      - postgres-data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

    networks:
      - tyk
  
volumes:
  redis-data:
  postgres-data:
  kafka-data:
  zookeeper-data:

networks:
  tyk:
